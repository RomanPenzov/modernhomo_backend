************* Module main
app\main.py:23:0: C0301: Line too long (148/100) (line-too-long)
app\main.py:8:0: W0611: Unused engine imported from app.core.database (unused-import)
app\main.py:8:0: W0611: Unused Base imported from app.core.database (unused-import)
app\main.py:9:0: W0611: Unused user imported from app.models (unused-import)
app\main.py:9:0: W0611: Unused danger_event imported from app.models (unused-import)
app\main.py:9:0: W0611: Unused transcription imported from app.models (unused-import)
************* Module api.danger_event
app\api\danger_event.py:1:0: C0114: Missing module docstring (missing-module-docstring)
app\api\danger_event.py:15:0: C0116: Missing function or method docstring (missing-function-docstring)
app\api\danger_event.py:3:0: W0611: Unused HTTPException imported from fastapi (unused-import)
app\api\danger_event.py:3:0: W0611: Unused status imported from fastapi (unused-import)
************* Module api.happiness
app\api\happiness.py:1:0: C0114: Missing module docstring (missing-module-docstring)
app\api\happiness.py:14:0: C0115: Missing class docstring (missing-class-docstring)
app\api\happiness.py:18:0: C0115: Missing class docstring (missing-class-docstring)
************* Module api.transcription
app\api\transcription.py:24:0: C0301: Line too long (106/100) (line-too-long)
app\api\transcription.py:1:0: C0114: Missing module docstring (missing-module-docstring)
app\api\transcription.py:15:0: C0116: Missing function or method docstring (missing-function-docstring)
app\api\transcription.py:3:0: W0611: Unused HTTPException imported from fastapi (unused-import)
app\api\transcription.py:3:0: W0611: Unused status imported from fastapi (unused-import)
************* Module api.user
app\api\user.py:1:0: C0114: Missing module docstring (missing-module-docstring)
app\api\user.py:9:0: C0411: third party import "jose.jwt" should be placed before first party imports "app.schemas.user.UserCreate", "app.crud.user", "app.core.database.SessionLocal"  (wrong-import-order)
app\api\user.py:10:0: C0411: standard import "datetime.datetime" should be placed before third party imports "fastapi.APIRouter", "sqlalchemy.orm.Session", "jose.jwt" and first party imports "app.schemas.user.UserCreate", "app.crud.user", "app.core.database.SessionLocal"  (wrong-import-order)
app\api\user.py:4:0: W0611: Unused status imported from fastapi (unused-import)
************* Module core.config
app\core\config.py:1:0: C0301: Line too long (108/100) (line-too-long)
app\core\config.py:22:0: C0301: Line too long (118/100) (line-too-long)
app\core\config.py:1:0: C0114: Missing module docstring (missing-module-docstring)
app\core\config.py:7:0: C0115: Missing class docstring (missing-class-docstring)
************* Module core.database
app\core\database.py:32:0: C0305: Trailing newlines (trailing-newlines)
app\core\database.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module crud.danger_event
app\crud\danger_event.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module crud.transcription
app\crud\transcription.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module crud.user
app\crud\user.py:13:0: C0411: third party import "passlib.context.CryptContext" should be placed before first party imports "app.models.user.User", "app.schemas.user.UserCreate"  (wrong-import-order)
************* Module models.danger_event
app\models\danger_event.py:1:0: C0114: Missing module docstring (missing-module-docstring)
app\models\danger_event.py:8:0: C0115: Missing class docstring (missing-class-docstring)
app\models\danger_event.py:8:0: R0903: Too few public methods (0/2) (too-few-public-methods)
app\models\danger_event.py:6:0: C0411: standard import "datetime.datetime" should be placed before third party imports "sqlalchemy.Column", "sqlalchemy.orm.relationship" and first party import "app.core.database.Base"  (wrong-import-order)
************* Module models.transcription
app\models\transcription.py:1:0: C0114: Missing module docstring (missing-module-docstring)
app\models\transcription.py:8:0: C0115: Missing class docstring (missing-class-docstring)
app\models\transcription.py:8:0: R0903: Too few public methods (0/2) (too-few-public-methods)
app\models\transcription.py:6:0: C0411: standard import "datetime.datetime" should be placed before third party imports "sqlalchemy.Column", "sqlalchemy.orm.relationship" and first party import "app.core.database.Base"  (wrong-import-order)
************* Module models.user
app\models\user.py:31:0: C0305: Trailing newlines (trailing-newlines)
app\models\user.py:13:0: R0903: Too few public methods (0/2) (too-few-public-methods)
************* Module schemas.danger_event
app\schemas\danger_event.py:1:0: C0114: Missing module docstring (missing-module-docstring)
app\schemas\danger_event.py:7:0: C0115: Missing class docstring (missing-class-docstring)
app\schemas\danger_event.py:14:0: C0115: Missing class docstring (missing-class-docstring)
app\schemas\danger_event.py:18:0: C0115: Missing class docstring (missing-class-docstring)
app\schemas\danger_event.py:23:4: C0115: Missing class docstring (missing-class-docstring)
app\schemas\danger_event.py:23:4: R0903: Too few public methods (0/2) (too-few-public-methods)
app\schemas\danger_event.py:4:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module schemas.transcription
app\schemas\transcription.py:1:0: C0114: Missing module docstring (missing-module-docstring)
app\schemas\transcription.py:7:0: C0115: Missing class docstring (missing-class-docstring)
app\schemas\transcription.py:13:0: C0115: Missing class docstring (missing-class-docstring)
app\schemas\transcription.py:17:0: C0115: Missing class docstring (missing-class-docstring)
app\schemas\transcription.py:22:4: C0115: Missing class docstring (missing-class-docstring)
app\schemas\transcription.py:22:4: R0903: Too few public methods (0/2) (too-few-public-methods)
app\schemas\transcription.py:4:0: C0411: standard import "datetime.datetime" should be placed before third party import "pydantic.BaseModel" (wrong-import-order)
************* Module schemas.user
app\schemas\user.py:1:0: C0114: Missing module docstring (missing-module-docstring)
app\schemas\user.py:7:0: C0115: Missing class docstring (missing-class-docstring)
app\schemas\user.py:11:0: C0115: Missing class docstring (missing-class-docstring)
app\schemas\user.py:15:0: C0115: Missing class docstring (missing-class-docstring)
app\schemas\user.py:18:4: C0115: Missing class docstring (missing-class-docstring)
app\schemas\user.py:18:4: R0903: Too few public methods (0/2) (too-few-public-methods)
app\schemas\user.py:22:0: C0115: Missing class docstring (missing-class-docstring)
app\schemas\user.py:27:0: C0115: Missing class docstring (missing-class-docstring)
************* Module services.sentiment_analyzer
app\services\sentiment_analyzer.py:8:0: C0301: Line too long (101/100) (line-too-long)
app\services\sentiment_analyzer.py:1:0: C0114: Missing module docstring (missing-module-docstring)
app\services\sentiment_analyzer.py:1:0: R0801: Similar lines in 2 files
==api.danger_event:[11:27]
==api.transcription:[11:27]
)

# ‘ункци€ дл€ создани€ подключени€ к базе данных
def get_db():
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()

# Ёндпоинт дл€ добавлени€ новой транскрибации
@router.post("/", response_model=TranscriptionRead)
def create_transcription(user_id: int, transcription: TranscriptionCreate, db: Session = Depends(get_db)):
    """
    ƒобавл€ю новую запись транскрибации дл€ пользовател€.
    """ (duplicate-code)
app\services\sentiment_analyzer.py:1:0: R0801: Similar lines in 2 files
==schemas.danger_event:[18:24]
==schemas.transcription:[17:23]
    id: int             # ”никальный идентификатор событи€
    user_id: int        # ID пользовател€, св€занного с событием
    timestamp: datetime # ¬рем€ обнаружени€ событи€

    class Config:
        orm_mode = True  # ƒл€ поддержки работы с ORM-модел€ми (duplicate-code)
app\services\sentiment_analyzer.py:1:0: R0801: Similar lines in 2 files
==api.transcription:[15:27]
==core.database:[26:31]
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()

# Ёндпоинт дл€ добавлени€ новой транскрибации
@router.post("/", response_model=TranscriptionRead)
def create_transcription(user_id: int, transcription: TranscriptionCreate, db: Session = Depends(get_db)):
    """
    ƒобавл€ю новую запись транскрибации дл€ пользовател€.
    """ (duplicate-code)
app\services\sentiment_analyzer.py:1:0: R0801: Similar lines in 2 files
==api.danger_event:[15:27]
==api.user:[29:43]
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()

# Ёндпоинт дл€ регистрации нового пользовател€
@router.post("/register", response_model=UserRead)
def register_user(user: UserCreate, db: Session = Depends(get_db)):
    """
    Ёндпоинт дл€ регистрации нового пользовател€.
    ѕровер€ю, нет ли уже такого пользовател€ в базе.
    ≈сли всЄ хорошо Ч сохран€ю пользовател€ и возвращаю его данные.
    """ (duplicate-code)

------------------------------------------------------------------
Your code has been rated at 7.16/10 (previous run: 7.00/10, +0.16)

